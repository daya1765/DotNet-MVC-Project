//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StoredProcedureCrud.DatabaseConnection
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dotnetdb5Entities : DbContext
    {
        public dotnetdb5Entities()
            : base("name=dotnetdb5Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Emplo> Emploes { get; set; }
    
        public virtual int DeleteEmploy(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmploy", idParameter);
        }
    
        public virtual ObjectResult<GetEmpl_Result> GetEmpl()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmpl_Result>("GetEmpl");
        }
    
        public virtual int InsertEmploy(Nullable<int> id, string empName, string empCompany, Nullable<int> empSalary, string empDepartment)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var empNameParameter = empName != null ?
                new ObjectParameter("EmpName", empName) :
                new ObjectParameter("EmpName", typeof(string));
    
            var empCompanyParameter = empCompany != null ?
                new ObjectParameter("EmpCompany", empCompany) :
                new ObjectParameter("EmpCompany", typeof(string));
    
            var empSalaryParameter = empSalary.HasValue ?
                new ObjectParameter("EmpSalary", empSalary) :
                new ObjectParameter("EmpSalary", typeof(int));
    
            var empDepartmentParameter = empDepartment != null ?
                new ObjectParameter("EmpDepartment", empDepartment) :
                new ObjectParameter("EmpDepartment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEmploy", idParameter, empNameParameter, empCompanyParameter, empSalaryParameter, empDepartmentParameter);
        }
    
        public virtual int UpdateEmploy(Nullable<int> id, string empName, string empCompany, Nullable<int> empSalary, string empDepartment)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var empNameParameter = empName != null ?
                new ObjectParameter("EmpName", empName) :
                new ObjectParameter("EmpName", typeof(string));
    
            var empCompanyParameter = empCompany != null ?
                new ObjectParameter("EmpCompany", empCompany) :
                new ObjectParameter("EmpCompany", typeof(string));
    
            var empSalaryParameter = empSalary.HasValue ?
                new ObjectParameter("EmpSalary", empSalary) :
                new ObjectParameter("EmpSalary", typeof(int));
    
            var empDepartmentParameter = empDepartment != null ?
                new ObjectParameter("EmpDepartment", empDepartment) :
                new ObjectParameter("EmpDepartment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmploy", idParameter, empNameParameter, empCompanyParameter, empSalaryParameter, empDepartmentParameter);
        }
    }
}
